name: Build Rollic SDK Package

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-package:
    name: Build .unitypackage
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Cache Unity Library
      - name: Cache Unity Library
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ hashFiles('ProjectSettings/ProjectVersion.txt') }}
          restore-keys: |
            Library-

      # 3. Build with Unity using an EXPLICIT Docker Image
      - name: Build with Unity
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          # --- THIS IS THE DEFINITIVE FIX ---

          # We are no longer letting the action guess. We are telling it
          # the exact, full name of the Docker image to use.
          customImage: gameci/unity:2022.3.21f1-base-1

          # We no longer need unityVersion, targetPlatform, or customParameters
          # because customImage overrides them all for the image selection step.

          # The method to execute inside the now-correctly-loaded editor.
          executeMethod: Sample.Editor.PackageExporter.Export
          
          # ------------------------------------

      # 4. List files to verify the package was created
      - name: List files in the workspace
        run: ls -R

      # 5. Upload the generated artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: RollicSDK-Package
          path: Build/RollicSDK.unitypackage
