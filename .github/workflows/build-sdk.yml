name: Test, Build, and Deploy Rollic SDK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Grant the workflow permissions to commit the documentation back to the repository.
permissions:
  contents: write

jobs:
  # ===============================================================
  # JOB 1: RUN UNIT TESTS (The Quality Gate)
  # ===============================================================
  test:
    name: Run Unity Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # This is the industry-standard action for running Unity tests.
      - name: Run Edit Mode Tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          # We use a customImage to force the use of a known-good Docker image,
          # avoiding all the "manifest not found" errors from before.
          customImage: gameci/unity:2022.3.21f1-base-1
          
          # We explicitly tell it which tests to run.
          testMode: EditMode

      # Upload the test results as an artifact for inspection.
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: Test-Results
          path: ./*-results.xml
          if-no-files-found: 'ignore'

  # ===============================================================
  # JOB 2: BUILD PACKAGE & DEPLOY DOCS (Runs only if 'test' succeeds)
  # ===============================================================
  build-and-deploy:
    name: Build Package & Deploy Docs
    runs-on: ubuntu-latest
    needs: test # This job depends on the 'test' job succeeding.
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate .unitypackage
        run: |
          find Assets/RollicSDK -name \*.meta > metaList.txt
          mkdir Build
        
      - name: Create .unitypackage
        uses: pCYSl5EDgo/create-unitypackage@v1.2.3
        with:
          package-path: 'Build/RollicSDK.unitypackage'
          include-files: 'metaList.txt'

      - name: Upload Package Artifact
        uses: actions/upload-artifact@v4
        with:
          name: RollicSDK-Package
          path: Build/RollicSDK.unitypackage

      - name: Install Doxygen and Graphviz
        run: sudo apt-get update && sudo apt-get install -y doxygen graphviz

      - name: Generate Doxygen Documentation
        run: doxygen Doxyfile

      - name: Add .nojekyll file
        run: touch docs/.nojekyll

      - name: Deploy Documentation to main branch
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs: Auto-generate documentation"
          file_pattern: docs/