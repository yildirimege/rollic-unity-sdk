name: Test, Build, and Deploy Rollic SDK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Grant permissions for the workflow to write to the gh-pages branch.
permissions:
  contents: write

jobs:
  # ===============================================================
  # JOB 1: RUN UNIT TESTS
  # This job runs first. If it fails, the entire workflow stops.
  # ===============================================================
  test:
    name: Run Unity Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Unity Library
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-test-v3-${{ hashFiles('ProjectSettings/ProjectVersion.txt') }}
          restore-keys: |
            Library-test-v3-

      - name: Run Edit Mode Tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          testMode: EditMode

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: Test-Results
          path: ./*-results.xml
          if-no-files-found: 'ignore'

  # ===============================================================
  # JOB 2: BUILD PACKAGE & DEPLOY DOCS
  # This job only runs if the 'test' job succeeds.
  # ===============================================================
  build-and-deploy:
    name: Build Package & Deploy Docs
    runs-on: ubuntu-latest
    needs: test # Creates the dependency on the 'test' job.
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Package Creation Steps ---
      - name: Generate meta file list
        run: find Assets/RollicSDK -name \*.meta > metaList.txt
      - name: Create Build Directory
        run: mkdir Build
      - name: Create .unitypackage
        uses: pCYSl5EDgo/create-unitypackage@v1.2.3
        with:
          package-path: 'Build/RollicSDK.unitypackage'
          include-files: 'metaList.txt'
      - name: Upload Package Artifact
        uses: actions/upload-artifact@v4
        with:
          name: RollicSDK-Package
          path: Build/RollicSDK.unitypackage

      # --- Documentation Deployment Steps ---
      - name: Install Doxygen and Graphviz
        run: sudo apt-get update && sudo apt-get install -y doxygen graphviz

      - name: Generate Doxygen Documentation
        run: doxygen Doxyfile

      # This is the final, corrected deployment step.
      # It deploys the contents of the 'docs' folder to a dedicated 'gh-pages' branch.
      - name: Deploy Documentation to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          # This token is automatically provided by GitHub.
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # This is the directory that Doxygen generates.
          publish_dir: ./docs/
          # This ensures old files from previous deployments are removed.
          force_orphan: true