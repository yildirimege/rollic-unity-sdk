name: Build SDK and Deploy Documentation

on:
  push:
    branches: [ main ]
  workflow_dispatch:
permissions:
  contents: write

jobs:
  # This single job does everything now.
  build-and-publish:
    name: Build, Document, and Publish
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Generate .unitypackage (from your working setup)
      - name: Generate meta file list
        run: find Assets/RollicSDK -name \*.meta > metaList.txt
      - name: Create Build Directory
        run: mkdir Build
      - name: Create .unitypackage
        uses: pCYSl5EDgo/create-unitypackage@v1.2.3
        with:
          package-path: 'Build/RollicSDK.unitypackage'
          include-files: 'metaList.txt'

      # 3. Upload the .unitypackage artifact
      - name: Upload Package Artifact
        uses: actions/upload-artifact@v4
        with:
          name: RollicSDK-Package
          path: Build/RollicSDK.unitypackage

      # 4. Install Doxygen and Graphviz
      - name: Install Doxygen
        run: sudo apt-get update && sudo apt-get install -y doxygen graphviz

      # 5. Generate the documentation into the /docs folder
      - name: Generate Doxygen Documentation
        run: doxygen Doxyfile

      # 6. Add a .nojekyll file to the docs folder
      - name: Add .nojekyll file
        run: touch docs/.nojekyll

      # 7. Commit and push the generated /docs folder to the main branch
      - name: Deploy Documentation to main branch
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs: Auto-generate documentation"
          # The directory to add and commit
          file_pattern: docs/
